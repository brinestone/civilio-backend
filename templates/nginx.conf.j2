http {
    upstream knowage {
        server knowage:8080;
    }

    upstream storage {
        server storage:9000;
    }

    upstream storage_console {
        server storage:9001;
    }

# Configuration for knowage server
    server {
        listen 80;
        server_name {{ knowage_subdomain_prefix }}.{{ domain_name }};
{% if enable_https == "yes" %}
        return 301 https://$host$request_uri;
        
    }

    server {
        listen 443 ssl;
        server_name {{ knowage_subdomain_prefix }}.{{ domain_name }};

        ssl_certificate /etc/nginx/certs/{{ knowage_subdomain_prefix }}.{{ domain_name }}.crt;
        ssl_certificate_key /etc/nginx/certs/{{ knowage_subdomain_prefix }}.{{ domain_name }}.key;
{% endif %}
        location / {
            proxy_pass http://knowage/knowage/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

# Configuration for storage API
    server {
        listen 80;
        server_name {{ storage_api_subdomain_prefix }}.{{ domain_name }};
{% if enable_https == "yes" %}
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name {{ storage_api_subdomain_prefix }}.{{ domain_name }};

        ssl_certificate /etc/nginx/certs/{{ storage_api_subdomain_prefix }}.{{ domain_name }}.crt;
        ssl_certificate_key /etc/nginx/certs/{{ storage_api_subdomain_prefix }}.{{ domain_name }}.key;
{% endif %}

        location / {
            proxy_pass http://storage/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

# Configuration for storage Console
    server {
        listen 80;
        server_name {{ storage_console_subdomain_prefix }}.{{ domain_name }};
{% if enable_https == "yes" %}
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name {{ storage_console_subdomain_prefix }}.{{ domain_name }};

        ssl_certificate /etc/nginx/certs/{{ storage_console_subdomain_prefix }}.{{ domain_name }}.crt;
        ssl_certificate_key /etc/nginx/certs/{{ storage_console_subdomain_prefix }}.{{ domain_name }}.key;
{% endif %}
        location / {
            proxy_pass http://storage_console/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}